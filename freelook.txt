{$CLEO .cs}

thread 'freeloo'

var
    0@ : Float // Camera
    1@ : Float //
    2@ : Float //
    3@ : Float // Point
    4@ : Float //
    5@ : Float // 
    6@ : Float // Z-Angle
    7@ : Float // XY-Angle
    8@ : Float // Temp
    9@ : Float // Speed
   10@ : Float // Acceleration
   11@ : Float // focus length
   12@ : Float // Temp 2
   13@ : int   // interference
end 

while true
    while true
        wait 50
        if and
            00E1: key_pressed 0 13 
            80E0: not player $player_char driving 
        then
            gosub @1 
            
            03E5: text_box 'FM_CAM' // Cam Mode On
            01B4: set_player $player_char frozen_state 0 
            04C4: create_coordinate 3@ 4@ 5@ from_actor $player_actor offset 0.0 5.0 0.0 // using player_actor's local axis 
            0054: store_player $player_char position_to 0@ 1@ 2@ 
            015F: set_camera_position 0@ 1@ 2@ 0.0 0.0 0.0 
            0160: point_camera 3@ 4@ 5@ 2 // [param4] 1-smooth movement, 2-immediately changing 
            02CE: 5@ = ground_z 0@ 1@ 19.0 
            5@ -= 20.0  
            00A1: put_actor $player_actor at 0@ 1@ 5@ 
            04D7: lock_actor $player_actor in_current_position 1 
            0170: 6@ = player $player_char z_angle 
            7@ = 0.0  
            9@ = 1.6  
            10@ = 1.6  
            11@ = 0.5  
            break
        end 
    end
    
    
    while true

        wait 0 ms 
        gosub @draw_coor
 
        05E0: 8@ = read_memory 0x94D790 size 4 virtual_protect 0

        05E0: 12@ = read_memory 0x94D794 size 4 virtual_protect 0
        7@ += 12@ 
        if 
            7@ > 75.0  
        then 
            7@ = 75.0  
        end
        if 
            -89.0 > 7@  
        then
            7@ = -89.0  
        end
        6@ -= 8@
        if 
            0.0 > 6@  
        then 
            6@ += 360.0  
        end
        if 
            6@ > 360.0  
        then 
            6@ -= 360.0  
        end

        if 
            00E1: key_pressed 0 8 // forward
        then 
            02F6: 8@ = cosine 7@ // sinus 
            8@ *= 9@  
            2@ += 8@  
            02F7: 8@ = sinus 7@ // cosine 
            8@ *= 9@  
            02F6: 3@ = cosine 6@ // sinus 
            3@ *= 8@  
            0@ -= 3@  
            02F7: 3@ = sinus 6@ // cosine 
            3@ *= 8@  
            1@ += 3@  

            {jump @continue}
        end 
        
        if 
            00E1: key_pressed 0 9 // backward
        then
            02F6: 8@ = cosine 7@ // sinus 
            8@ *= 9@  
            2@ -= 8@  
            02F7: 8@ = sinus 7@ // cosine 
            8@ *= 9@  
            02F6: 3@ = cosine 6@ // sinus 
            3@ *= 8@  
            0@ += 3@  
            02F7: 3@ = sinus 6@ // cosine 
            3@ *= 8@  
            1@ -= 3@ 

            {jump @continue}
        end
        
        if  
            00E1: key_pressed 0 10 // left
        then 
            02F7: 8@ = sinus 6@ // cosine 
            8@ *= 9@  
            0@ -= 8@  
            02F6: 8@ = cosine 6@ // sinus 
            8@ *= 9@  
            1@ -= 8@  

            {jump @continue}
        end
        
        if  
            00E1: key_pressed 0 11 // right
        then 
            02F7: 8@ = sinus 6@ // cosine 
            8@ *= 9@  
            0@ += 8@  
            02F6: 8@ = cosine 6@ // sinus 
            8@ *= 9@  
            1@ += 8@  

            {jump @continue}
        end
        
        if and
            00E1: key_pressed 0 5 // prev
            80E1: not key_pressed 0 6 
        then 
            repeat 
                wait 0 ms 
                gosub @draw_coor 
            until if 80E1: not key_pressed 0 5 // prev
            9@ += 10@  
            10@ *= 2.0  
            gosub @show_speed  
            jump @continue 
        end 
        
        if and 
            00E1: key_pressed 0 7 // next
            80E1: not key_pressed 0 6 
        then  
            repeat 
                wait 0 ms 
                gosub @draw_coor 
            until if 80E1: not key_pressed 0 7 // next
            10@ /= 2.0  
            9@ -= 10@  
            gosub @show_speed  
            jump @continue 
        end 
        
        if
            00E1: key_pressed 0 13 // camera
        then
            16@ = 0  
            repeat 
                wait 0 ms 
                gosub @draw_coor
                if 16@ > 1000
                then
                    break
                end 
            until if 80E1: not key_pressed 0 13 // camera

            if 16@ > 1000
            then
                03E5: text_box 'FM_CAMF' // Cam Mode Off
                0055: put_player $player_char at 0@ 1@ 2@ 
                04D7: lock_actor $player_actor in_current_position 0 
                0171: set_player $player_char z_angle_to 6@ 
                0373: set_camera_directly_behind_player 
                015A: restore_camera 
                01B4: set_player $player_char frozen_state 1 
                gosub @1
                break 
            else
                03E5: text_box 'FM_CAMF' // Cam Mode Off
                02C0: set 3@ 4@ 5@ to_ped_path_coords_closest_to 0@ 1@ 2@ 
                0055: put_player $player_char at 3@ 4@ 5@ 
                04D7: lock_actor $player_actor in_current_position 0 
                0171: set_player $player_char z_angle_to 6@ 
                0373: set_camera_directly_behind_player 
                015A: restore_camera 
                01B4: set_player $player_char frozen_state 1 
                break 
            end
        end 
        
    :continue
    gosub @put_camera
    end

end

:1
repeat
    wait 0
until if 80E1: not key_pressed 0 13 // camera 
return 

:put_camera
02F6: 8@ = cosine 7@ // sinus 
8@ *= 11@  
8@ += 2@  
5@ = 8@ 
02F7: 8@ = sinus 7@ // cosine 
8@ *= 11@  
02F7: 4@ = sinus 6@ // cosine 
4@ *= 8@  
4@ += 1@  
02F6: 3@ = cosine 6@ // sinus 
8@ *= 3@  
3@ = 0@ 
3@ -= 8@  
015F: set_camera_position 0@ 1@ 2@ 0.0 0.0 0.0 
0160: point_camera 3@ 4@ 5@ 2 // [param4] 1-smooth movement, 2-immediately changing 
02CE: 5@ = ground_z 0@ 1@ 19.0 
5@ -= 20.0  
00A1: put_actor $player_actor at 0@ 1@ 5@ 
0171: set_player $player_char z_angle_to 6@ 
return 

:show_speed 
3@ = 9@ 
3@ *= 100.0  
008C: 3@ = float_to_integer 3@ 
0085: 4@ = 3@   // integer 
0016: 4@ /= 100 // integer  
0012: 4@ *= 100 // integer  
0066: 3@ -= 4@  // integer 
0016: 4@ /= 100 // integer  
02FD: text_2numbers_lowpriority 'FM_SPEE' 4@ 3@ 500 ms 1 // Speed: ~1~.~1~
return 

:draw_coor
gosub @2 
033E: text_draw 150.0 400.0 'FM_CP' // Camera Position:
03F0: text_draw_toggle 0 
gosub @2
if
    0@ > 0.0
then 
    8@ = 0@
    gosub @3
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 320.0 400.0 'FM_AX2' 12@ 8@ // X: ~1~.~1~
    else 
        045B: text_draw_2numbers 320.0 400.0 'FM_AX02' 12@ 8@ // X: ~1~.0~1~
    end
else
    8@ = 0.0
    8@-= 0@
    gosub @3 
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 320.0 400.0 'FM_AX-2' 12@ 8@ // X: -~1~.~1~
    else 
        045B: text_draw_2numbers 320.0 400.0 'FM_AX*2' 12@ 8@ // X: -~1~.0~1~
    end
end
03F0: text_draw_toggle 0 
gosub @2
if
    1@ > 0.0
then 
    8@ = 1@
    gosub @3
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 430.0 400.0 'FM_AY2' 12@ 8@ // Y: ~1~.~1~
    else 
        045B: text_draw_2numbers 430.0 400.0 'FM_AY02' 12@ 8@ // Y: ~1~.0~1~
    end
else
    8@ = 0.0
    8@-= 1@
    gosub @3 
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 430.0 400.0 'FM_AY-2' 12@ 8@ // Y: -~1~.~1~
    else 
        045B: text_draw_2numbers 430.0 400.0 'FM_AY*2' 12@ 8@ // Y: -~1~.0~1~
    end
end
03F0: text_draw_toggle 0 
gosub @2
if
    2@ > 0.0
then 
    8@ = 2@
    gosub @3
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 540.0 400.0 'FM_AZ2' 12@ 8@ // Z: ~1~.~1~
    else 
        045B: text_draw_2numbers 540.0 400.0 'FM_AZ02' 12@ 8@ // Z: ~1~.0~1~
    end
else
    8@ = 0.0
    8@-= 2@
    gosub @3 
    if
        0019: 8@ > 9 // integer values
    then
        045B: text_draw_2numbers 540.0 400.0 'FM_AZ-2' 12@ 8@ // Z: -~1~.~1~
    else 
        045B: text_draw_2numbers 540.0 400.0 'FM_AZ*2' 12@ 8@ // Z: -~1~.0~1~
    end
end
03F0: text_draw_toggle 0 
return 

:2
0341: unknown_text_stuff 1 
0348: set_text_draw_proportional 1 
03E4: set_text_draw_align_right 0 
0343: set_text_linewidth 648.0 
0342: set_text_draw_centered 0 
0345: set_text_draw_in_box 0 
0340: set_text_draw_color 0 255 0 255 
033F: set_text_draw_letter_width_height 0.6 1.2 
return 

:3
8@ *= 100.0  
008C: 8@ = float_to_integer 8@ 
0085: 12@ = 8@   // integer 
0016: 12@ /= 100 // integer  
0012: 12@ *= 100 // integer  
0066: 8@ -= 12@  // integer 
0016: 12@ /= 100 // integer  
return 
